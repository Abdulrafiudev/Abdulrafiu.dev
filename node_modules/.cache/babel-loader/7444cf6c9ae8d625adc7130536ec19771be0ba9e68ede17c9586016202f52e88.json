{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dell\\\\Desktop\\\\Abdulrafiu's Portfolio\\\\src\\\\components\\\\CTA\\\\CTAOne.js\";\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport MagneticButton from \"../Miscellaneous/MagneticButton\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CTAOne = () => {\n  var _ctaData$button, _ctaData$socials;\n  // const [ctaData, setCtaData] = useState(null);\n  // const [loading, setLoading] = useState(true);\n\n  // useEffect(() => {\n  // \taxios\n  // \t.get(\"https://my-json-server.typicode.com/themeland/brilio-json-1/cta\")\n  // \t.then((response) => {\n  // \t\tconsole.log(\"Full API Response:\", response.data);\n  // \t\tsetCtaData(response.data.cta || response.data);\n  // \t\tsetLoading(false);\n  // \t})\n  // \t.catch((error) => {\n  // \t\tconsole.error(\"Error fetching CTA data:\", error);\n  // \t\tsetLoading(false);\n  // \t});\n  // }, []);\n\n  // if (loading) return <p>Loading CTA...</p>;\n  // if (!ctaData || Object.keys(ctaData).length === 0) return <p>Error loading CTA.</p>;\n  const ctaData = {\n    title: \"Let's Build Something Powerful\",\n    highlight: \"Together\"\n  };\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"cta border-top border-light-subtle\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row justify-content-center text-center\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-12 col-md-10 col-lg-7\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"title mb-0 mb-md-2\",\n            children: ctaData.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"cta-text\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"line-item\",\n              children: ctaData.highlight\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"line\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(MagneticButton, {\n              href: (_ctaData$button = ctaData.button) === null || _ctaData$button === void 0 ? void 0 : _ctaData$button.link,\n              children: \"good\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"socials mt-5\",\n            children: /*#__PURE__*/_jsxDEV(\"nav\", {\n              className: \"nav justify-content-center\",\n              children: ((_ctaData$socials = ctaData.socials) === null || _ctaData$socials === void 0 ? void 0 : _ctaData$socials.length) > 0 ? ctaData.socials.map((social, index) => /*#__PURE__*/_jsxDEV(\"a\", {\n                className: \"nav-link swap-icon\",\n                href: social.link,\n                children: [social.name, \" \", /*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"icon rotate bi bi-arrow-right-short\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 53,\n                  columnNumber: 23\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 47,\n                columnNumber: 21\n              }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"No social links available.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 57,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n_c = CTAOne;\nexport default CTAOne;\nvar _c;\n$RefreshReg$(_c, \"CTAOne\");","map":{"version":3,"names":["React","useState","useEffect","axios","MagneticButton","jsxDEV","_jsxDEV","CTAOne","_ctaData$button","_ctaData$socials","ctaData","title","highlight","className","children","fileName","_jsxFileName","lineNumber","columnNumber","href","button","link","socials","length","map","social","index","name","_c","$RefreshReg$"],"sources":["C:/Users/dell/Desktop/Abdulrafiu's Portfolio/src/components/CTA/CTAOne.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport MagneticButton from \"../Miscellaneous/MagneticButton\";\n\nconst CTAOne = () => {\n  // const [ctaData, setCtaData] = useState(null);\n  // const [loading, setLoading] = useState(true);\n\n  // useEffect(() => {\n  // \taxios\n  // \t.get(\"https://my-json-server.typicode.com/themeland/brilio-json-1/cta\")\n  // \t.then((response) => {\n  // \t\tconsole.log(\"Full API Response:\", response.data);\n  // \t\tsetCtaData(response.data.cta || response.data);\n  // \t\tsetLoading(false);\n  // \t})\n  // \t.catch((error) => {\n  // \t\tconsole.error(\"Error fetching CTA data:\", error);\n  // \t\tsetLoading(false);\n  // \t});\n  // }, []);\n\n  // if (loading) return <p>Loading CTA...</p>;\n  // if (!ctaData || Object.keys(ctaData).length === 0) return <p>Error loading CTA.</p>;\n  const ctaData = {\n    title: \"Let's Build Something Powerful\",\n    highlight: \"Together\",\n  };\n\n  return (\n    <section className=\"cta border-top border-light-subtle\">\n      <div className=\"container\">\n        <div className=\"row justify-content-center text-center\">\n          <div className=\"col-12 col-md-10 col-lg-7\">\n            <h2 className=\"title mb-0 mb-md-2\">{ctaData.title}</h2>\n            <div className=\"cta-text\">\n              <span className=\"line-item\">{ctaData.highlight}</span>\n              <span className=\"line\"></span>\n              <MagneticButton href={ctaData.button?.link}>good</MagneticButton>\n            </div>\n\n            {/* Socials */}\n            <div className=\"socials mt-5\">\n              <nav className=\"nav justify-content-center\">\n                {ctaData.socials?.length > 0 ? (\n                  ctaData.socials.map((social, index) => (\n                    <a\n                      key={index}\n                      className=\"nav-link swap-icon\"\n                      href={social.link}\n                    >\n                      {social.name}{\" \"}\n                      <i className=\"icon rotate bi bi-arrow-right-short\"></i>\n                    </a>\n                  ))\n                ) : (\n                  <p>No social links available.</p>\n                )}\n              </nav>\n            </div>\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default CTAOne;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}